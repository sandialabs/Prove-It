<< HOW TO UPDATE THE GIT-HUB PAGES FOR PROVE-IT >>

<<at the Prove-It level where the source branch (e.g., master) is checked out>>
cd doc
make html
cd ..
find . -name "*.html" -o -name "_common_.py" -o -name "_axioms_.py" -o -name "_theorems_.py" -o -name "__pv_it"  -o -name "notebook.css" | tar -czf pv_it.tar.gz -T - --exclude="paths.txt"
find . -name "*.html" -o -name "*.ipynb" -o -name "presumptions.txt" -o -name "__pv_it" -o -name "*.png"  -o -name "notebook.css" -o -name ".nojekyll" | tar -czf pv_it_web.tar.gz -T -


<<in a location where the gh-pages branch is checkout out>>
git checkout --orphan gh-pages-update
git rm -rf .

<<move over pv_it_web.tar.gz and pv_it.tar.gz>>
tar -xzf pv_it_web.tar.gz; rm pv_it_web.tar.gz

git add .
git commit -a -m "Git-Hub Pages update"
git push -f origin gh-pages-update:gh-pages

git checkout gh-pages
git branch -D gh-pages-update


<< DONE! >>

<< IN ONE LINE >>

in ProveItWeb folder (where Prove-It is cloned for this purpose)

git checkout --orphan gh-pages-update ; git rm -rf . ; mv ~/../pv_it_web.tar.gz . ; tar -xzf pv_it_web.tar.gz; rm pv_it_web.tar.gz ; git add . ; git commit -a -m "Git-Hub Pages update" ; git push -f origin gh-pages-update:gh-pages ; git checkout gh-pages ; git branch -D gh-pages-update

<< A useful command for adding all notebook updates to the repository >>
find . \( -name __pv_it -o -name .ipynb_checkpoints \) -prune -o -name "*.ipynb" -not -name "*stashed*.ipynb" -print | xargs git add


<< HOW TO UPDATE MASTER_FULL BRANCH >>

in ProveItMasterFull folder (where Prove-It is cloned for this purpose)
master checked out and fully build in Prove-It

git checkout --orphan master-full-update ; git rm -rf . ; cp -r ~/Prove-It/* . ; git checkout master-full -- .gitignore ; git add . ; git commit -a -m "master-full update" ; git push -f origin master-full-update:master-full ; git checkout master-full ; git branch -D master-full-update
